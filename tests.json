{
  "v1ch02": [
    {"target": "Welcome/Welcome", "output_file": "Welcome_output.txt"}
  ],
  "v1ch03": [
    {"target": "FirstSample/FirstSample", "output_file": "FirstSample_output.txt"},
    {"target": "Constants/Constants", "output_file": "Constants_output.txt"},
    {"target": "Constants/Constants2", "output_file": "Constants_output.txt"},
    {"target": "InputTest/InputTest", "input_file": "InputTest_input.txt", "output_file": "InputTest_output.txt"},
    {"target": "Retirement/Retirement", "input_file": "Retirement_input.txt", "output_file": "Retirement_output.txt"},
    {"target": "Retirement2/Retirement2", "input_file": "Retirement2_input.txt", "output_file": "Retirement2_output.txt"},
    {"target": "LotteryOdds/LotteryOdds", "input_file": "LotteryOdds_input.txt", "output_file": "LotteryOdds_output.txt"},
    {"target": "BigIntegerTest/BigIntegerTest", "input_file": "BigIntegerTest_input.txt", "output_file": "BigIntegerTest_output.txt"},
    {"target": "Message/Message", "args": "-h world", "output_file": "Message_output.txt"},
    {"target": "Message/Message", "args": "-g cruel world", "output_file": "Message_output2.txt"},
    {"target": "CompoundInterest/CompoundInterest", "output_file": "CompoundInterest_output.txt"},
    {"target": "LotteryArray/LotteryArray", "output_file": "LotteryArray_output.txt"}
  ],
  "v1ch04": [
    {"target": "EmployeeTest/EmployeeTest", "output_file": "EmployeeTest_output.txt"},
    {"target": "StaticTest/StaticTest", "output_file": "StaticTest_output.txt"},
    {"target": "ParamTest/ParamTest", "output_file": "ParamTest_output.txt"},
    {"target": "PackageTest/PackageTest", "output_file": "PackageTest_output.txt"}
  ],
  "v1ch05": [
    {"target": "inheritance.ManagerTest", "output_file": "ManagerTest_output.txt"},
    {"target": "equals.EqualsTest", "output_file": "EqualsTest_output.txt"},
    {"target": "arrayList.ArrayListTest", "output_file": "../../v1ch04/testdata/EmployeeTest_output.txt"},
    {"target": "abstractClasses.PersonTest", "output_file": "PersonTest_output.txt"},
    {"target": "enums.EnumTest", "input_file": "EnumTest_input.txt", "output_file": "EnumTest_output.txt"},
    {"target": "sealed.SealedTest", "output_file": "SealedTest_output.txt"},
    {"target": "reflection.ReflectionTest", "input_file": "ReflectionTest_input.txt", "output_file": "ReflectionTest_output.txt"},
    {"target": "objectAnalyzer.ObjectAnalyzerTest",
      "jvm_options": "--add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED",
      "output_file": "ObjectAnalyzerTest_output.txt"},
    {"target": "arrays.CopyOfTest", "output_file": "CopyOfTest_output.txt"},
    {"target": "methods.MethodTableTest", "output_file": "MethodTableTest_output.txt"}
  ],
  "v1ch06": [
    {"target": "interfaces.EmployeeSortTest", "output_file": "EmployeeSortTest_output.txt"},
    {"target": "comparator.ComparatorTest", "output_file": "ComparatorTest_output.txt"}
  ],
  "v1ch07": [
    {"target": "except.ExceptTest", "output_file": "ExceptTest_output.txt"},
    {"target": "stackTrace.StackTraceTest", "input_file": "StackTraceTest_input.txt", "output_file": "StackTraceTest_output.txt"},
    {"target": "assertion.AssertionTest", "input_file": "AssertionTest_input1.txt", "output_file": "AssertionTest_output1.txt"},
    {"target": "assertion.AssertionTest", "input_file": "AssertionTest_input1.txt",
      "jvm_options": "-ea", "output_file": "AssertionTest_output2.txt"},
    {"target": "assertion.AssertionTest", "input_file": "AssertionTest_input3.txt",
      "jvm_options": "-ea:assertion.MathUtils", "output_file": "AssertionTest_output3.txt"}
  ],
  "v1ch08": [
    {"target": "pair1.PairTest1", "output_file": "PairTest1_output.txt"},
    {"target": "pair2.PairTest2", "output_file": "PairTest2_output.txt"},
    {"target": "bridgeMethod.BridgeMethodTest", "output_file": "BridgeMethodTest_output.txt"},
    {"target": "pair3.PairTest3", "output_file": "PairTest3_output.txt"},
    {"target": "genericAlgorithms.GenericAlgorithms", "output_file": "GenericAlgorithms_output.txt"},
    {"target": "genericReflection.GenericReflectionTest", "args": "pair.Pair", "output_file": "GenericReflectionTest_output1.txt"},
    {"target": "genericReflection.GenericReflectionTest", "args": "pair2.ArrayAlg", "output_file": "GenericReflectionTest_output2.txt"},
    {"target": "genericReflection.TypeLiterals", "output_file": "TypeLiterals_output.txt"}
  ],
  "v1ch09": [
    {"target": "circularArrayQueue.CircularArrayQueueTest", "output_file": "CircularArrayQueueTest_output.txt"},
    {"target": "linkedList.LinkedListTest", "output_file": "LinkedListTest_output.txt"},
    {"target": "treeSet.TreeSetTest", "output_file": "TreeSetTest_output.txt"},
    {"target": "priorityQueue.PriorityQueueTest", "output_file": "PriorityQueueTest_output.txt"},
    {"target": "map.MapTest", "output_file": "MapTest_output.txt"}
  ],
  "v1ch12": [
    {"target": "future.FutureTest", "input_file": "FutureTest_input.txt", "output_file": "FutureTest_output.txt"}
  ]
}
